syntax = "proto3";
option go_package = "./api/scheduler";

message Appointment {
    enum ApptType {
        UNKNOWN = 0;
        SURGICAL_INTERVENTION = 1;
        ROUTINE_CHECKUP = 2;
    }
    string apptID = 1;
    string patientName = 2;
    string doctorName = 3;
    string apptDateTime = 4;
    ApptType appointment = 5;
}

service Scheduler {
    // Service Methods
    rpc CreateAppt (CreateAppointment) returns (CreateResponse);
    rpc GetAppt (GetAppointments) returns (GetResponse);
    rpc UpdateAppt (UpdateAppointment) returns (UpdateResponse);
    rpc DeleteAppt (DeleteAppointment) returns (DeleteResponse);

    // Health Check Methods
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

// CREATE

message CreateAppointment {
    Appointment appointment = 1;
}

message CreateResponse {
    string apptID = 1;
    string status = 2;
    string error = 3;
}

// GET

message GetAppointments {}

message GetResponse {
    repeated Appointment appointments = 1;
}

// UPDATE

message UpdateAppointment {
    Appointment appointment = 1;
}

message UpdateResponse {
    Appointment appointment = 1;
    string status = 2;
    string error = 3;
}

// DELETE

message DeleteAppointment {
    string apptID = 1;
}

message DeleteResponse {
    string apptID = 1;
    string status = 2;
    string error = 3;
}

// HEALTH

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
}