version: '3.8'

services:
  schedule_db:
    container_name: "schedule-db"
    image: postgres:16.0
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${SCHEDULE_DB_NAME}
      POSTGRES_USER: ${SCHEDULE_DB_USER}
      POSTGRES_PASSWORD: ${SCHEDULE_DB_PASSWORD}
    volumes:
      - scheduler_volume:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    expose:
      - "5432"
  staff_db:
    container_name: "staff-db"
    image: postgres:16.0
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${STAFF_DB_NAME}
      POSTGRES_USER: ${STAFF_DB_USER}
      POSTGRES_PASSWORD: ${STAFF_DB_PASSWORD}
    volumes:
      - staff_volume:/var/lib/postgresql/data
    ports:
      - "5437:5432"
    expose:
      - "5432"
  test_db:
    container_name: "test-db"
    image: postgres:16.0
    ports:
      - "5438:5432"
    expose:
      - "5432"
  scheduler_1:
    build: ./schedule-ms
    image: rusnacam/scheduler:latest
    container_name: "schedule-ms-0"
    ports:
      - "3030:3030"
    depends_on:
      schedule_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=3030
      - SVC_HOST=schedule-ms-0
  scheduler_2:
    build: ./schedule-ms
    image: rusnacam/scheduler:latest
    container_name: "schedule-ms-1"
    ports:
      - "3031:3031"
    depends_on:
      schedule_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=3031
      - SVC_HOST=schedule-ms-1
  scheduler_3:
    build: ./schedule-ms
    image: rusnacam/scheduler:latest
    container_name: "schedule-ms-2"
    ports:
      - "3032:3032"
    depends_on:
      schedule_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=3032
      - SVC_HOST=schedule-ms-2
  staff_1:
    build: ./staff-ms
    image: rusnacam/staff:latest
    container_name: "staff-ms-0"
    ports:
      - "8080:8080"
    depends_on:
      staff_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=8080
      - SVC_HOST=staff-ms-0
  staff_2:
    build: ./staff-ms
    image: rusnacam/staff:latest
    container_name: "staff-ms-1"
    ports:
      - "8081:8081"
    tty:
      true
    depends_on:
      staff_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=8081
      - SVC_HOST=staff-ms-1
  staff_3:
    build: ./staff-ms
    image: rusnacam/staff:latest
    container_name: "staff-ms-2"
    ports:
      - "8082:8082"
    tty:
      true
    depends_on:
      staff_db:
        condition: service_started
      service_discovery:
        condition: service_started
    environment:
      - SVC_PORT=8082
      - SVC_HOST=staff-ms-2
  service_discovery:
    build: ./service-discovery
    image: rusnacam/service-discovery:latest
    container_name: "service-discovery"
    ports:
      - "5051:5051"
  gateway:
    build: ./gateway
    image: rusnacam/gateway:latest
    container_name: "gateway"
    ports:
      - "5050:5050"
    expose:
      - "5050"
    tty:
      true
    depends_on:
      - service_discovery
    environment:
    - TIMEOUT=0.5
volumes:
  scheduler_volume:
    driver: local
  staff_volume:
    driver: local